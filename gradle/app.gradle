import org.gradle.internal.os.OperatingSystem;

// use gradlew -Penv=${env} to pass
def environment = hasProperty('env') ? env : null

apply plugin: 'application'
mainClassName = 'Main'

clean {
    if (project.file("src/main/web").exists()) {
        doLast {
            exec {
                workingDir "${rootDir}/gradle/node"
                if (!OperatingSystem.current().isWindows()) {
                    commandLine 'npm', 'install'
                    commandLine 'npm', 'run', 'clean', '--', '--root', project.file('.')
                } else {
                    commandLine 'cmd', '/c', 'npm', 'install'
                    commandLine 'cmd', '/c', 'npm', 'run', 'clean', '--', '--root', project.file('.')
                }
            }
        }
    }
}

processResources {
    if (environment != null) {
        def envProperties = "conf/${environment}/resources"
        assert project.file(envProperties).exists()
        from envProperties
    }
    if (project.file("src/main/web").exists()) {
        doLast {
            exec {
                workingDir "${rootDir}/gradle/node"
                if (!OperatingSystem.current().isWindows()) {
                    commandLine 'npm', 'install'
                    commandLine 'npm', 'run', 'build', '--', '--root', project.file('.')
                } else {
                    commandLine 'cmd', '/c', 'npm', 'install'
                    commandLine 'cmd', '/c', 'npm', 'run', 'build', '--', '--root', project.file('.')
                }
            }
        }
    }
}

distTar {
    archiveName "${baseName}.${extension}"
}

startScripts {
    defaultJvmOpts = ["-Dcore.webPath=APP_HOME_VAR/web", "-Dcore.appName=${project.name}"]

    doLast {
        windowsScript.text = windowsScript.text.replaceFirst('APP_HOME_VAR', '%APP_HOME%')
        unixScript.text = unixScript.text.replaceFirst('APP_HOME_VAR', '\\$APP_HOME')
    }
}

distributions {
    main {
        if (environment != null) {
            def envProperties = "conf/${environment}/resources"
            assert project.file(envProperties).exists()
            contents {
                from("conf/${environment}/web") {
                    into "web"
                }
            }
        }
    }
}